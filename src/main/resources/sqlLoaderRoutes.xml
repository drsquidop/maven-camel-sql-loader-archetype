<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    ">

    <!-- this is an included XML file where we only the the routeContext -->
    <routeContext id="sqlLoaderRoutes" xmlns="http://camel.apache.org/schema/spring">
        <route id="sqlQuery">

            <!--
                headers to consider
                    source name
                    extract id (i.e. date/cutoff point)
                    number of records
                    target table
                    operation
                    checksum?
                body
                    list of (records)
                        map of (record)
                            key value pairs (column)

                from ref: subscribe to topic of interest
                determine table to apply to
                insert or update/replace
                to ref: sql endpoint
                publish completion event

                note: if redshift, the s3 copy command can be used for inserting large batches
            -->

            <from uri="ref:replace"/>
            <validate>
                <!--<simple>bodyAs(List).size > 0</simple>-->
                <simple>true</simple>
            </validate>
            <!-- body contains the rows to add -->
            <!--<to uri="sql:select count(*) from person?dataSource=warehouse"/>-->
            <to uri="sql:insert into person(id, name) values(#,#)?dataSource=warehouse"/>
            <log message="inserted rows ${headers} ${body}" loggingLevel="DEBUG"/>
            <!--<removeHeaders pattern="*" excludePattern="CamelFileName|CamelSqlRowCount|FileKey|migrationLastUpdate|migrationSource"/>-->
            <to uri="ref:replaced"/>
        </route>

    </routeContext>

</beans>