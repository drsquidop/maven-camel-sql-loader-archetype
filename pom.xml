<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>la.isg</groupId>
    <artifactId>maven-camel-sql-loader</artifactId>
    <packaging>war</packaging>
    <version>0.2.0-SNAPSHOT</version>

    <name>Maven Camel SQL Loader Archetype</name>
    <scm>
      <connection>scm:git:git@github.com:drsquidop/maven-camel-sql-loader-archetype.git</connection>
      <url>http://github.com/drsquidop/maven-camel-sql-loader-archetype</url>
      <tag>HEAD</tag>
    </scm>

    <profiles>
        <profile>
            <id>production</id>
            <properties>
                <skipTests>true</skipTests>
            </properties>
        </profile>
    </profiles>

    <properties>
        <jetty.home>${project.basedir}</jetty.home>
        <spring-version>4.2.1.RELEASE</spring-version>
        <camel-version>2.15.3</camel-version>

        <!--
        The local development defaults
        -->
        <envPrefix></envPrefix>
        <s3Bucket>${project.groupId}.warehouse.uploads</s3Bucket>

        <awsAccessKey>change_me</awsAccessKey>
        <awsSecretKey>change_me/</awsSecretKey>
        <awsProfile>default</awsProfile>
        <awsDefaultRegion>us-west-2</awsDefaultRegion>

        <sqlWarehouseHost>change_me</sqlWarehouseHost>
        <sqlWarehouseDatabase>change_me</sqlWarehouseDatabase>
        <sqlWarehouseUser>change_me</sqlWarehouseUser>
        <sqlWarehousePassword>change_me</sqlWarehousePassword>

        <sqlWarehouseMigrationUser>change_me</sqlWarehouseMigrationUser>
        <sqlWarehouseMigrationPassword>change_me</sqlWarehouseMigrationPassword>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.3.170</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jetty</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.8.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xbean</groupId>
            <artifactId>xbean-spring</artifactId>
            <version>4.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jdbc</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-sql</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-script</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-csv</artifactId>
            <version>${camel-version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4-1202-jdbc41</version>
        </dependency>
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.1.2</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <version>${camel-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring</artifactId>
            <version>${camel-version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <distributionManagement>
        <repository>
            <id>maven-repo</id>
            <name>${project.groupId} Maven Repository</name>
            <url>http://change.me</url>
        </repository>
        <snapshotRepository>
            <id>maven-snapshot-repo</id>
            <name>${project.groupId} Maven Snapshot Repository</name>
            <url>http://change.me</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-war-plugin</artifactId>-->
                <!--<version>2.0.2</version>-->
                <!--<configuration>-->
                    <!--<webResources>-->
                        <!--<resource>-->
                            <!--<directory>${basedir}/src/main/webapp/WEB-INF</directory>-->
                            <!--<filtering>true</filtering>-->
                            <!--<targetPath>WEB-INF</targetPath>-->
                            <!--<includes>-->
                                <!--<include>**/web.xml</include>-->
                                <!--<include>**/*Context.xml</include>-->
                            <!--</includes>-->
                        <!--</resource>-->
                    <!--</webResources>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <url>jdbc:h2:file:target/foobar</url>
                    <user>sa</user>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>1.3.170</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <!--<includes>-->
                        <!--<include>**/*Test*.java</include>-->
                    <!--</includes>-->

                    <forkMode>always</forkMode>

                    <!--
                    EXTERNAL CONFIGURATION VARIABLES

                    The following variables are expected to be set in the environment of the user context running the service.
                    During testing, these variables are provided by properties in either pom.xml or ~/.m2/settings.xml.
                    Note: A nice addition would be to allow these properties to be pulled from the chef vault during testing.

                    These settings are then injected into the environment when running either Surefire (JUnit) tests or the Jetty Maven plugin.

                    TBD - When running migrations, these are set by getting resource filtered environment files from target/___
                        or running ./target/rake.sh

                        Profile:
                            development
                            test
                            production

                    -->
                    <environmentVariables>
                        <ENVIRONMENT_PREFIX>${envPrefix}</ENVIRONMENT_PREFIX>
                        <S3_BUCKET>${s3Bucket}</S3_BUCKET>
                        <AWS_ACCESS_KEY_ID>${awsAccessKey}</AWS_ACCESS_KEY_ID>
                        <AWS_SECRET_ACCESS_KEY>${awsSecretKey}</AWS_SECRET_ACCESS_KEY>
                        <AWS_PROFILE>${awsProfile}</AWS_PROFILE>
                        <AWS_DEFAULT_REGION>${awsDefaultRegion}</AWS_DEFAULT_REGION>
                        <SQL_WAREHOUSE_HOST>${sqlWarehouseHost}</SQL_WAREHOUSE_HOST>
                        <SQL_WAREHOUSE_DATABASE>${sqlWarehouseDatabase}</SQL_WAREHOUSE_DATABASE>
                        <SQL_WAREHOUSE_MIGRATION_USER>${sqlWarehouseMigrationUser}</SQL_WAREHOUSE_MIGRATION_USER>
                        <SQL_WAREHOUSE_MIGRATION_PASSWORD>${sqlWarehouseMigrationPassword}</SQL_WAREHOUSE_MIGRATION_PASSWORD>
                        <SQL_WAREHOUSE_USER>${sqlWarehouseUser}</SQL_WAREHOUSE_USER>
                        <SQL_WAREHOUSE_PASSWORD>${sqlWarehousePassword}</SQL_WAREHOUSE_PASSWORD>
                    </environmentVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.3.3.v20150827</version>
                <configuration>
                    <webAppConfig>
                        <contextPath>/splunkProcessor</contextPath>
                    </webAppConfig>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <stopPort>9999</stopPort>
                    <stopKey>foo</stopKey>
                    <jvmArgs>-Djetty.home=${project.basedir}</jvmArgs>
                    <systemProperties>
                        <systemProperty>
                            <!--NOTE: in production, the external configuration dir MUST be specified in the Jetty launch config-->
                            <!--        for example: -Dext.properties.dir=/opt/jetty/default/config-->
                            <name>jetty.home</name>
                            <value>${project.basedir}</value>
                        </systemProperty>
                    </systemProperties>
                    <!--
                    The same variables mapped above are repeated here so they can be injected into
                    mvn jetty:run-forked
                    -->
                    <env>
                        <ENVIRONMENT_PREFIX>${envPrefix}</ENVIRONMENT_PREFIX>
                        <S3_BUCKET>${s3Bucket}</S3_BUCKET>
                        <AWS_ACCESS_KEY_ID>${awsAccessKey}</AWS_ACCESS_KEY_ID>
                        <AWS_SECRET_ACCESS_KEY>${awsSecretKey}</AWS_SECRET_ACCESS_KEY>
                        <AWS_PROFILE>${awsProfile}</AWS_PROFILE>
                        <AWS_DEFAULT_REGION>${awsDefaultRegion}</AWS_DEFAULT_REGION>
                        <SQL_WAREHOUSE_HOST>${sqlWarehouseHost}</SQL_WAREHOUSE_HOST>
                        <SQL_WAREHOUSE_DATABASE>${sqlWarehouseDatabase}</SQL_WAREHOUSE_DATABASE>
                        <SQL_WAREHOUSE_MIGRATION_USER>${sqlWarehouseMigrationUser}</SQL_WAREHOUSE_MIGRATION_USER>
                        <SQL_WAREHOUSE_MIGRATION_PASSWORD>${sqlWarehouseMigrationPassword}</SQL_WAREHOUSE_MIGRATION_PASSWORD>
                        <SQL_WAREHOUSE_USER>${sqlWarehouseUser}</SQL_WAREHOUSE_USER>
                        <SQL_WAREHOUSE_PASSWORD>${sqlWarehousePassword}</SQL_WAREHOUSE_PASSWORD>
                    </env>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <version>2.13.2</version>
                <configuration>
                    <applicationContextUri>applicationContext.xml</applicationContextUri>
                    <executable>dot</executable>
                    <useDot>true</useDot>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <id>Central</id>
            <url>http://central.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
